#include <PIDController.h>
int val;
int encoder0PinA = 2;
int encoder0PinB = 3;
int encoder1PinA = 21;
int encoder1PinB = 20;
int encoder0Pos = 0;
int encoder1Pos = 0;
int encoder0PinALast = LOW;
int encoder1PinALast = LOW;
int in1=6;
int in2=7;
float speedvalue=0;
float anglevalue=0;
int count;
int n = LOW;
int prepulses=0;
float encpulses;
int prevalue;

void setup() {
    Serial.begin (9600);
  pinMode (encoder0PinA, INPUT);
  pinMode (encoder0PinB, INPUT);
  pinMode (encoder1PinA, INPUT);
  pinMode (encoder1PinB, INPUT);
  pinMode (in1,INPUT);
  pinMode (in2,INPUT);
  attachInterrupt(digitalPinToInterrupt(2), encoder, CHANGE);
  attachInterrupt(digitalPinToInterrupt(21), encoder1, CHANGE);
}

void loop() {
 prevalue=encpulses;
 Serial.print(prevalue);
 Serial.print (encoder0Pos);
 Serial.print ("\n");
  Serial.print (encoder1Pos);
     while (Serial.available()>0)
    { Serial.print("Enter the Rotation Angle ");
      anglevalue=Serial.parseInt();

   if (anglevalue == '\n') {break;}   
      if (anglevalue == 0) {break;}
     
      Serial.print("The Angle is ");
      Serial.println(anglevalue);
      encpulses=(anglevalue*(1600.0/360.0));
      Serial.print("No. of encoder pulses");
      Serial.println(encpulses);

    }
      prepulses=encpulses;
      if(encpulses>0){
       motorClockwise(encpulses);
       if(prevalue<encpulses){
        Serial.print("hello");}
       }
       if(encpulses<0){
        motorCounterClockwise(encpulses);
        }
}
void encoder ()
{
    n = digitalRead(encoder0PinA);
  if ((encoder0PinALast == LOW) && (n == HIGH)) {
    if (digitalRead(encoder0PinB) == LOW) {
      encoder0Pos++;
    } else {
      encoder0Pos--;//CCW
    }
} 

}
void encoder1 ()
{
    n = digitalRead(encoder1PinA);
  if ((encoder1PinALast == LOW) && (n == HIGH)) {
    if (digitalRead(encoder1PinB) == LOW) {
      encoder1Pos++;
    } else {
      encoder1Pos--;//CCW
    }
} 

}
void motorClockwise(int pulses)
{
  while (pulses>encoder0Pos){
  digitalWrite(in1,HIGH);
  digitalWrite(in2,LOW);
  if(pulses<encoder0Pos){break;}
  }
//  while (pulses<encoder0Pos){
//  digitalWrite(in1,LOW);
//  digitalWrite(in2,HIGH);
//  if(pulses>encoder0Pos){break;}
//  }
// 
    digitalWrite(in1,LOW);
  digitalWrite(in2,LOW);
  }
 void motorCounterClockwise(int pulses)
 {
  while (pulses<encoder0Pos){
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  if(pulses>encoder0Pos){break;}
  }
 
    digitalWrite(in1,LOW);
  digitalWrite(in2,LOW);
  }
